"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1745],{3905:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>g});var n=i(67294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(i),m=a,g=c["".concat(p,".").concat(m)]||c[m]||u[m]||o;return i?n.createElement(g,r(r({ref:t},d),{},{components:i})):n.createElement(g,r({ref:t},d))}));function g(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=i.length,r=new Array(o);r[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,r[1]=l;for(var s=2;s<o;s++)r[s]=i[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},45413:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=i(87462),a=(i(67294),i(3905));const o={},r="CompassWidget",l={unversionedId:"api-reference/widgets/compass-widget",id:"api-reference/widgets/compass-widget",title:"CompassWidget",description:"This widget visualizes bearing and pitch. Click it once to reset bearing to 0, click it a second time to reset pitch to 0. Supports Map and Globe view.",source:"@site/../docs/api-reference/widgets/compass-widget.md",sourceDirName:"api-reference/widgets",slug:"/api-reference/widgets/compass-widget",permalink:"/docs/api-reference/widgets/compass-widget",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/widgets/compass-widget.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ZoomWidget",permalink:"/docs/api-reference/widgets/zoom-widget"},next:{title:"FullscreenWidget",permalink:"/docs/api-reference/widgets/fullscreen-widget"}},p={},s=[{value:"Props",id:"props",level:2},{value:"<code>id</code> (string, optional)",id:"id",level:4},{value:"<code>viewId</code> (string, optional)",id:"viewid",level:4},{value:"<code>placement</code> (string, optional)",id:"placement",level:4},{value:"<code>label</code> (string, optional)",id:"label",level:4},{value:"<code>transitionDuration</code> (number, optional)",id:"transitionduration",level:4},{value:"<code>style</code> (object, optional)",id:"style",level:4},{value:"<code>className</code> (string, optional)",id:"classname",level:4}],d={toc:s},c="wrapper";function u(e){let{components:t,...i}=e;return(0,a.kt)(c,(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"compasswidget"},"CompassWidget"),(0,a.kt)("p",null,"This widget visualizes bearing and pitch. Click it once to reset bearing to 0, click it a second time to reset pitch to 0. Supports Map and Globe view."),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("h4",{id:"id"},(0,a.kt)("inlineCode",{parentName:"h4"},"id")," (string, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"'compass'")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," must be unique among all your widgets at a given time. It's recommended to set ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," explicitly. The ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," is used to match widgets between updates, ensuring deck.gl can distinguish between them. A default ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," is assigned based on widget type, so if you have multiple widgets of the same type (e.g., two ",(0,a.kt)("inlineCode",{parentName:"p"},"compass")," widgets), you need to provide a custom ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," for at least one."),(0,a.kt)("h4",{id:"viewid"},(0,a.kt)("inlineCode",{parentName:"h4"},"viewId")," (string, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"null")),(0,a.kt)("p",null,"The widget is attached to the view identified by this ",(0,a.kt)("inlineCode",{parentName:"p"},"viewId"),". When assigned, the widget is placed within the specified view, and  exclusively interacts with it. Required when using ",(0,a.kt)("a",{parentName:"p",href:"/docs/developer-guide/views#using-multiple-views"},"multiple views"),"."),(0,a.kt)("h4",{id:"placement"},(0,a.kt)("inlineCode",{parentName:"h4"},"placement")," (string, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"'top-left'")),(0,a.kt)("p",null,"Widget position within the view relative to the map container. Valid options are ",(0,a.kt)("inlineCode",{parentName:"p"},"top-left"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"top-right"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"bottom-left"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"bottom-right"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"fill"),"."),(0,a.kt)("h4",{id:"label"},(0,a.kt)("inlineCode",{parentName:"h4"},"label")," (string, optional)"),(0,a.kt)("p",null,"Tooltip message displayed while hovering a mouse over the widget."),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"'Compass'")),(0,a.kt)("h4",{id:"transitionduration"},(0,a.kt)("inlineCode",{parentName:"h4"},"transitionDuration")," (number, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"200")),(0,a.kt)("p",null,"Bearing and pitch reset transition duration in milliseconds."),(0,a.kt)("h4",{id:"style"},(0,a.kt)("inlineCode",{parentName:"h4"},"style")," (object, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"{}")),(0,a.kt)("p",null,"Additional CSS styles for the canvas."),(0,a.kt)("h4",{id:"classname"},(0,a.kt)("inlineCode",{parentName:"h4"},"className")," (string, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")),(0,a.kt)("p",null,"Class name to attach to the widget element. The element has the default class name of ",(0,a.kt)("inlineCode",{parentName:"p"},"deck-widget deck-compass-widget"),"."))}u.isMDXComponent=!0}}]);