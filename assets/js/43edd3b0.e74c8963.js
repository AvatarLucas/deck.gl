"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1745],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,g=c["".concat(p,".").concat(m)]||c[m]||u[m]||o;return n?i.createElement(g,r(r({ref:t},d),{},{components:n})):i.createElement(g,r({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,r[1]=l;for(var s=2;s<o;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},45413:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var i=n(87462),a=(n(67294),n(3905));const o={},r="CompassWidget",l={unversionedId:"api-reference/widgets/compass-widget",id:"api-reference/widgets/compass-widget",title:"CompassWidget",description:"This widget visualizes bearing and pitch. Click it once to reset bearing to 0, click it a second time to reset pitch to 0. Supports Map and Globe view.",source:"@site/../docs/api-reference/widgets/compass-widget.md",sourceDirName:"api-reference/widgets",slug:"/api-reference/widgets/compass-widget",permalink:"/docs/api-reference/widgets/compass-widget",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/widgets/compass-widget.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ZoomWidget",permalink:"/docs/api-reference/widgets/zoom-widget"},next:{title:"FullscreenWidget",permalink:"/docs/api-reference/widgets/fullscreen-widget"}},p={},s=[{value:"Props",id:"props",level:2},{value:"<code>id</code> (string, optional)",id:"id",level:4},{value:"<code>viewId</code> (string, optional)",id:"viewid",level:4},{value:"<code>placement</code> (string, optional)",id:"placement",level:4},{value:"<code>label</code> (string, optional)",id:"label",level:4},{value:"<code>transitionDuration</code> (number, optional)",id:"transitionduration",level:4},{value:"<code>style</code> (object, optional)",id:"style",level:4},{value:"<code>className</code> (string, optional)",id:"classname",level:4}],d={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"compasswidget"},"CompassWidget"),(0,a.kt)("p",null,"This widget visualizes bearing and pitch. Click it once to reset bearing to 0, click it a second time to reset pitch to 0. Supports Map and Globe view."),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("h4",{id:"id"},(0,a.kt)("inlineCode",{parentName:"h4"},"id")," (string, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"'compass'")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," must be unique among all your widgets at a given time. It's recommended to set ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," explicitly. The ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," is used to match widgets between updates, ensuring deck.gl can distinguish between them. A default ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," is assigned based on widget type, so if you have multiple widgets of the same type (e.g., two ",(0,a.kt)("inlineCode",{parentName:"p"},"compass")," widgets), you need to provide a custom ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," for at least one."),(0,a.kt)("h4",{id:"viewid"},(0,a.kt)("inlineCode",{parentName:"h4"},"viewId")," (string, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"null")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"viewId")," prop controls how a widget interacts with views. If ",(0,a.kt)("inlineCode",{parentName:"p"},"viewId")," is defined, the widget is placed in that view and interacts exclusively with it; otherwise, it is placed in the root widget container and affects all views."),(0,a.kt)("h4",{id:"placement"},(0,a.kt)("inlineCode",{parentName:"h4"},"placement")," (string, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"'top-left'")),(0,a.kt)("p",null,"Widget position within the view relative to the map container. Valid options are ",(0,a.kt)("inlineCode",{parentName:"p"},"top-left"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"top-right"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"bottom-left"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"bottom-right"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"fill"),"."),(0,a.kt)("h4",{id:"label"},(0,a.kt)("inlineCode",{parentName:"h4"},"label")," (string, optional)"),(0,a.kt)("p",null,"Tooltip message displayed while hovering a mouse over the widget."),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"'Compass'")),(0,a.kt)("h4",{id:"transitionduration"},(0,a.kt)("inlineCode",{parentName:"h4"},"transitionDuration")," (number, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"200")),(0,a.kt)("p",null,"Bearing and pitch reset transition duration in milliseconds."),(0,a.kt)("h4",{id:"style"},(0,a.kt)("inlineCode",{parentName:"h4"},"style")," (object, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"{}")),(0,a.kt)("p",null,"Additional CSS styles for the canvas."),(0,a.kt)("h4",{id:"classname"},(0,a.kt)("inlineCode",{parentName:"h4"},"className")," (string, optional)"),(0,a.kt)("p",null,"Default: ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")),(0,a.kt)("p",null,"Class name to attach to the widget element. The element has the default class name of ",(0,a.kt)("inlineCode",{parentName:"p"},"deck-widget deck-compass-widget"),"."))}u.isMDXComponent=!0}}]);