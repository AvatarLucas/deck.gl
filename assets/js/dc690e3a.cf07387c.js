"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[2062],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(a),m=r,k=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return a?n.createElement(k,l(l({ref:t},c),{},{components:a})):n.createElement(k,l({ref:t},c))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},99244:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const i={},l="QuadbinHeatmapTileLayer (Experimental)",o={unversionedId:"api-reference/carto/quadbin-heatmap-tile-layer",id:"api-reference/carto/quadbin-heatmap-tile-layer",title:"QuadbinHeatmapTileLayer (Experimental)",description:"QuadbinHeatmapTileLayer is a layer for visualizing tiled data indexed with a Quadbin Spatial Index using a heatmap.",source:"@site/../docs/api-reference/carto/quadbin-heatmap-tile-layer.md",sourceDirName:"api-reference/carto",slug:"/api-reference/carto/quadbin-heatmap-tile-layer",permalink:"/docs/api-reference/carto/quadbin-heatmap-tile-layer",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/carto/quadbin-heatmap-tile-layer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"QuadbinTileLayer",permalink:"/docs/api-reference/carto/quadbin-tile-layer"},next:{title:"RasterTileLayer (Experimental)",permalink:"/docs/api-reference/carto/raster-tile-layer"}},p={},s=[{value:"Usage",id:"usage",level:2},{value:"Installation",id:"installation",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>data</code> (TilejsonResult)",id:"data",level:4},{value:"Render Options",id:"render-options",level:3},{value:"<code>radiusPixels</code> (number, optional) transition-enabled",id:"radiuspixels",level:4},{value:"<code>colorDomain</code> (number2, optional) transition-enabled",id:"colordomain",level:4},{value:"<code>colorRange</code> (Color[], optional)",id:"colorrange",level:4},{value:"Data Accessors",id:"data-accessors",level:3},{value:"<code>getWeight</code> (Accessor&lt;number&gt;, optional)",id:"getweight",level:4}],c={toc:s},d="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quadbinheatmaptilelayer-experimental"},"QuadbinHeatmapTileLayer (Experimental)"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QuadbinHeatmapTileLayer")," is a layer for visualizing tiled data indexed with a ",(0,r.kt)("a",{parentName:"p",href:"https://docs.carto.com/data-and-analysis/analytics-toolbox-for-bigquery/key-concepts/spatial-indexes#quadbin"},"Quadbin Spatial Index")," using a heatmap. "),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import DeckGL from '@deck.gl/react';\nimport {QuadbinHeatmapTileLayer, quadbinTableSource} from '@deck.gl/carto';\n\nfunction App({viewState}) {\n  const data = quadbinTableSource({\n    accessToken: 'XXX',\n    connectionName: 'carto_dw',\n    tableName: 'carto-demo-data.demo_tables.quadbin'\n  });\n\n  const layer = new QuadbinHeatmapTileLayer({\n    data,\n    getWeight: d => d.properties.count\n  })\n\n  return <DeckGL viewState={viewState} layers={[layer]} />;\n}\n")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"To install the dependencies from NPM:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/layers @deck.gl/carto\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import {QuadbinHeatmapTileLayer} from '@deck.gl/carto';\nnew QuadbinHeatmapTileLayer({});\n")),(0,r.kt)("p",null,"To use pre-bundled scripts:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://unpkg.com/deck.gl@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/carto@^9.0.0/dist.min.js"><\/script>\n\n\x3c!-- or --\x3e\n<script src="https://unpkg.com/@deck.gl/core@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/layers@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/geo-layers@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/carto@^9.0.0/dist.min.js"><\/script>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"new deck.carto.QuadbinHeatmapTileLayer({});\n")),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("p",null,"Inherits from all ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/layer"},"Base Layer")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/core/composite-layer"},"CompositeLayer")," properties."),(0,r.kt)("h4",{id:"data"},(0,r.kt)("inlineCode",{parentName:"h4"},"data")," (TilejsonResult)"),(0,r.kt)("p",null,"Required. A valid ",(0,r.kt)("inlineCode",{parentName:"p"},"TilejsonResult")," object."),(0,r.kt)("p",null,"Use one of the following ",(0,r.kt)("a",{parentName:"p",href:"/docs/api-reference/carto/data-sources"},"Data Sources")," to fetch this from the CARTO API:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./data-sources#quadbintablesource"},"quadbinTableSource")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./data-sources#quadbinquerysource"},"quadbinQuerySource")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./data-sources#quadbintilesetsource"},"quadbinTilesetSource"))),(0,r.kt)("h3",{id:"render-options"},"Render Options"),(0,r.kt)("h4",{id:"radiuspixels"},(0,r.kt)("inlineCode",{parentName:"h4"},"radiusPixels")," (number, optional) ",(0,r.kt)("img",{parentName:"h4",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"20"))),(0,r.kt)("p",null,"Radius of the heatmap blur in pixels, to which the weight of a cell is distributed."),(0,r.kt)("h4",{id:"colordomain"},(0,r.kt)("inlineCode",{parentName:"h4"},"colorDomain")," (number","[2]",", optional) ",(0,r.kt)("img",{parentName:"h4",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"[0, 1]"))),(0,r.kt)("p",null,"Controls how weight values are mapped to the ",(0,r.kt)("inlineCode",{parentName:"p"},"colorRange"),", as an array of two numbers ","[",(0,r.kt)("inlineCode",{parentName:"p"},"minValue"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"maxValue"),"]","."),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},"colorDomain")," is specified, a pixel with ",(0,r.kt)("inlineCode",{parentName:"p"},"minValue")," is assigned the first color in ",(0,r.kt)("inlineCode",{parentName:"p"},"colorRange"),", a pixel with ",(0,r.kt)("inlineCode",{parentName:"p"},"maxValue")," is assigned the last color in ",(0,r.kt)("inlineCode",{parentName:"p"},"colorRange"),", and any value in between is interpolated. Pixels in the bottom 10% of the range defined by ",(0,r.kt)("inlineCode",{parentName:"p"},"colorDomain")," are gradually faded out by reducing alpha, until 100% transparency at ",(0,r.kt)("inlineCode",{parentName:"p"},"minValue"),". Pixels with weight more than ",(0,r.kt)("inlineCode",{parentName:"p"},"maxValue")," are capped to the last color in ",(0,r.kt)("inlineCode",{parentName:"p"},"colorRange"),"."),(0,r.kt)("h4",{id:"colorrange"},(0,r.kt)("inlineCode",{parentName:"h4"},"colorRange")," (Color[], optional)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Default: ",(0,r.kt)("a",{parentName:"li",href:"http://colorbrewer2.org/#type=sequential&scheme=YlOrRd&n=6"},"colorbrewer")," ",(0,r.kt)("inlineCode",{parentName:"li"},"6-class YlOrRd")," ",(0,r.kt)("img",{src:"https://deck.gl/images/colorbrewer_YlOrRd_6.png"}))),(0,r.kt)("p",null,"The color palette used in the heatmap, as an array of colors ","[color1, color2, ...]",". Each color is in the format of ",(0,r.kt)("inlineCode",{parentName:"p"},"[r, g, b]"),". Each channel is a number between 0-255."),(0,r.kt)("h3",{id:"data-accessors"},"Data Accessors"),(0,r.kt)("h4",{id:"getweight"},(0,r.kt)("inlineCode",{parentName:"h4"},"getWeight")," (",(0,r.kt)("a",{parentName:"h4",href:"/docs/developer-guide/using-layers#accessors"},"Accessor","<","number",">"),", optional)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"1"))),(0,r.kt)("p",null,"Method called to retrieve weight of each quadbin cell. By default each cell will use a weight of ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),"."))}u.isMDXComponent=!0}}]);